---
title: "Data Viz with ggplot"
author: "Jihyun In(PID: A16955363)"
format: pdf
toc: true
---

# Background

There ar eamny graphics systems available in R. These include "base" R and tons of add on packages like **ggplot2**

Let's compare "base" and **ggplot 2** briefly. We can use some example data that is built-in with R called `cars`:


```{r}
head(cars)
```

In base R I can just call `plot()`
```{r}
plot(cars)
```
How can we do this with **ggplot2**

First we need to install the package. We do this with `install.packages("ggplot2")`. I only need to do this once and then it will be available on my computer from then on.

> Key point: I only install packages in the R console, not within quarto docs or R scripts. 

Before I use any add-on package I must load it up wit ha call to `library()`
```{r}
library(ggplot2)
ggplot(cars)
```

Every ggplot has at least 3 things. 

- the **data** (in our case `cars`)
- the **aes**thetics (how the data  maps to the plot)
- the **geom**s that determine how the plot is drawn(Lines, pots, columns, etc. )
```{r}
ggplot(cars)  + 
  aes(x=speed, y=dist) + 
  geom_point()
```

For "simple" plots ggplot is much more verbose than base R but the defaults are nicer and for complicated plots it becomes much more efficient and structured. 

> Q. dd a line to show the relationship of speed to dtopping distance (i.e. add another "layer")

```{r}
p <- ggplot(cars) + 
  aes(x = speed, y= dist) + 
  geom_point() + 
  geom_smooth(se=FALSE, method="lm")
```


I can always save any ggplot object (i.e. plot) and then use it later or adding more layers.
```{r}
p + 
  ggtitle(label="Distance vs Speed", subtitle="hi") + 
  theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5))
```
> Q. Add a title and subtitle to the plot


# Gene Expression Plot
```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes,20)
```



> Q. how many genes are in this wee dataset?

```{r}
nrow(genes)
```



> Q. How many columns are there?

```{r}
ncol(genes)
```
> Q. What are the column names?

```{r}
colnames(genes)
```

> Q. How many "up" and "down" regulated genes are there?

```{r}
# how I did it
# sum(genes$State == "up")
# sum(genes$State == "down")

# the better way
table(genes$State)
```
## Custom Color Plot
> Q. Make a first plot of this data 

```{r}

ggplot(genes) + 
  aes(x=Condition1, y=Condition2, col=State) +
  scale_color_manual(values=c("red", "grey", "blue")) +
  geom_point() + 
  labs(title="Trial vs. Control Gene Expression", x="control (no drug)", y="Drug treated") +
  theme_bw()

```

# Using different geoms

Let's plot some aspects of the in-built `mtcars` dataset. 

```{r}
head(mtcars)
```

> Q. scatter plot of `mpg` vs `displacement`

```{r}
p1 <- ggplot(mtcars) + 
  aes(x=disp, y=mpg) + 
  geom_point() +
  theme_bw() + 
  labs(title = "mpg vs. displacement", x="displacement")
```

> Q. boxplot of `gear` vs `displacement`

```{r}
  p2 <- ggplot(mtcars) + 
  aes(gear, disp, group=gear)+ 
  geom_boxplot() + 
  theme_bw() + labs(title="disp vs gear boxplot")
```

> Q. barplot of `carb`

```{r}
p3 <- ggplot(mtcars) + 
  aes(carb) + 
  geom_bar() + 
  theme_bw()
```


> Q. Smooth of `qsec` vs. `disp`

```{r}
p4 <- ggplot(mtcars) + 
  aes(x=disp, y=qsec) + 
  geom_smooth() + 
  theme_bw()

```

I want to combine all these plots into one figure with multiple panels. We can use **patchwork** package to do this. 

```{r}
library(patchwork)

(p1 / p2 | p3 / p4)
```

```{r}
ggsave(filename="my_figure.png",width=8, height=5)
```

# Econcomic status
```{r}
# File location online
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)
```


And a wee peek

```{r}
head(gapminder)

```

> Q. How many countries are in this dataset?

```{r}
length(table(gapminder$country))
```

> Q. Plot gdpPercap vs lifeExp colored by continent

```{r}
ggplot(gapminder) + 
  aes(x = gdpPercap, y=lifeExp, col=continent) + 
  geom_point(alpha = 0.3) + 
  facet_wrap(~continent) + 
  theme_bw()
```

