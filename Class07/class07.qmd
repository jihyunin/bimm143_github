---
title: "Class07"
author: "Jihyun In"
format: pdf
toc: true
---

Today we will explore unsupervised machine learning methods starting iwht clustering and idmensionality reduction. 

## Clustering
```{r}
hist(rnorm(10000, mean=3))
```

Teturn 30 numbers centred on -3.

```{r}
tmp <- c(rnorm(30, mean=-3),
rnorm(30, mean=3))

x<- cbind(x=tmp, y= rev(tmp))

x
```
Make a plot o f`x`

```{r}
plot(x)
```


###K-means
The main function in "base R" for K-means clustering is called `kmeans()`
```{r}
km <- kmeans(x, centers=2)
km
```

The `kmeans`() function returns a "list" with 9 ccomponents. You can see the named components of any list with the `attributes()` function. 
```{r}
attributes(km)
```
> Q. How many points are in each cluster?

```{r}
km$size
```


>Q. Cluster assignment/membership vector

```{r}
km$cluster
```


>Q. Cluster centers?

```{r}
km$centers
```

> Q. Make  a plot of our `kmeans()` reslts showing cluster assignment and using different colors for each cluster/group of points and cluster centers in blue.

```{r}
plot(x, col=km$cluster + 1) #didn't like black as a point color
points(km$centers, col="blue", pch=15, cex=2)
```

> Q. Run `kmeans()` again on `x` and this cluster into 4 groups/clusters and plot the same result figure as above. 

```{r}
km4 <- kmeans(x, centers=4)
km4
```

```{r}
plot(x, col=km4$cluster + 3) #didn't like black as a point color
points(km4$centers, col="blue", pch=4, cex=2) #changed pch shape for preference
```

>**Key-point:** K-means clustering is super popular but cna be misused. One big limitation is that it can impose a clustering pattern on your data even if clear natrual grouping doesn't exist - i.e. it does what you tell it to do in terms of `centers`. 

### Hierarchial clustering

The main function in "base" R for hierarchical clustering is called `hclust()`

You can't just pass our dataset as is into `hclust()`, you must give "distance matrix" as input. We can get this from the `dist()` function in R.
```{r}
d <- dist(x)
hc <- hclust(d)
hc
```

the results of `hclust()` don't have a useful `print()` method but do have a special `plot()` method. 

```{r}
plot(hc)
abline(h=8, col="red")
```

To get our main cluster assignemnt (membership vector), we need to "cut" the tree at the "big goalposts"

```{r}
grps <- cutree(hc, h=8)
grps
```

```{r}
table(grps)
```


```{r}
plot(x, col=grps +1) #Again, I like colors
```

Hierarchial Clustering is distinct in that the dendrogram(tree figure) can reveal the potential grouping in your data (unlike K-means).

## Principal Component Analysis
PCA is a common and highly useful dimensionality reduction technique used in many fields - particularly bioinformatics'

Here we will analyze some data from the UK on food consumption. 


### Data import
```{r}
url <- "https://tinyurl.com/UK-foods"
x <- read.csv(url)
head(x)
```


```{r}
x <- read.csv(url, row.names=1)
head(x)

```


```{r}
barplot(as.matrix(x), beside=F, col=rainbow(nrow(x)))
```

One conventional plot that can be useful is called a "pairs" plot.

```{r}
pairs(x, col=rainbow(nrow(x)), pch=16)
```

### PCA to the rescue

The main function in base for PCA is called `prcomp()`.

```{r}
t(x)
pca <-prcomp(t(x))
summary(pca)
```

The `precomp()` function returns a list object of our results with 

```{r}
attributes(pca)
```

The two main results in here are `pca$x` and `pca$rotation`. The first of these (`pca$x`) contains the scores o fthe dta on the new PC axis - we use these to make our "PCA plot". 

```{r}
pca$x
```

```{r}
library(ggplot2)
library(ggrepel)
#Make  aplot of pca$x with PC1 vs. PC2

ggplot(pca$x)  + 
  aes(PC1, PC2, label=rownames(pca$x)) + 
  geom_point() +
  geom_text_repel() +
  theme_bw()
```
the above plot plots PC2 vs. PC1, showing the scores along each axis. This shows that along PC1, N.Ireland is an outlier, and along PC2, Scotland is far from wales. 


The second major result is contained in the `pca$rotation` object or component. Let's plot this to see what PCA is picking up...

```{r}
ggplot(pca$rotation) + 
  aes(PC1, rownames(pca$rotation)) + 
  geom_col()
```
The above bar plot shows how much each category of food contributes to PC1. Fresh potatoes and soft drinks explain most of the positive variance (what Ireland, the positive outlier, consumes more of), and fresh fruit and alcoholic drinks explain a large part of what Ireland consumes less of. 








